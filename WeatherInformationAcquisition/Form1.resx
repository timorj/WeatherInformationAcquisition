<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANDQATIyMUuyYlFsgvLRm/LS0ZtywrGLQsKxi0LCsYtCwr
        GLQsKxi0LCsYtCwrGLQfHxF7AAAAAAAAAAAAAAAALS0Zt8nGcP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP/PzHT/z8x0/8/MdP/PzHT/lZRU9yIhFI0AAAAAAAAAADw7IcfPzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP83Nx/EAAAAAAAAAAA+PCLLz8x0/87LdP+Ih2P/k5J7/5WU
        ff+Uk33/hoVx/4iHcP+Uk3n/i4tr/66rZv/PzHT/OzshyAAAAAAAAAAAQkEl0M/MdP+mo2D/x8e5/+Xl
        1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v+Ojnj/xsNv/z09IsoAAAAAAAAAAEVEKNXPzHT/tbRo/4eL
        gP/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/zc2//6CeXv9APyTMAAAAAAAAAABGRSfWzst0/zlz
        cf8VotP/VoCJ/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/5STgP/Bvm3/Pz0jzAAAAAAAAAAARUQo1Z6i
        Yv8Ro9f/EL/+/0OInP/l5db/5eXW/+Xl1v/l5db/s7Og/5KRc/+mo2P/z8x0/z49IskAAAAAAAAAAEVE
        KNWCj17/D7j0/xC//v8Wp9r/gpiY/+Xl1v/l5db/t7am/5mYYP/PzHT/z8x0/8/MdP88OyHIAAAAAAAA
        AABGRSfWvbts/ySBlv8Qv/7/EL/+/xSp3/9AZm3/iIdl/6OhYv/PzHT/z8x0/8/MdP/PzHT/OzohxgAA
        AAAAAAAAR0Uo1c/MdP+orWn/RIF8/yaBlf80fYP/jZtm/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/z48
        I8cAAAAAAAAAAEhIKcPPzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP9CQibMAAAAAAAAAAAmJBW2vbtq/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP/PzHT/OjggxwAAAAAAAAAAAAAADCUjFbQyMBzIMzMcvTIyHbsyMh27MjIduzY2H8A3Nx/DOTcgwjk3
        IMI8PCLLPT0iyB8cEVoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AADABwAAgAEAAIABAACAAQAAgAEAAIABAACAAQAAgAEAAIAB
        AACAAQAAgAEAAIABAACAAQAAwAMAAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASgAAAFwAAABXAAAAPwAA
        ACoAAAAZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQUFYgoKBvUhIBT1JycX9Ccn
        F/QnJxf0IB8T9BgYD/QREQr2ERAJ9BAQCfQQEAn0EREJ9RIRCvYSEQr2EhEK9hIRCvYSEQr2EhEK9hIR
        CvYSEQr2EhEK9hERCfYLCQbyDAwGhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABILCwf1vbtq/8/M
        dP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP/PzHT/z8x0/8/MdP/PzHT/z8x0/8XCbv8jIxX3DAwImgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcURD
        JfjPzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/83KdP8ODQj0AAAAEAAAAAAAAAAAAAAAAAAA
        AAAAAACKWFYx/s/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/zU1HvUAAABcAAAAAAAA
        AAAAAAAAAAAAAAMDAphkYzj/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/WVgy/gAA
        AIwAAAAAAAAAAAAAAAAAAAAABgYDpm5tPv/PzHT/z8x0/8/MdP/PzHT/wL5s/2ZlQP9HRzT/SUk3/0lJ
        N/9JSTf/SUk3/0hINv87Oyz/Ozss/0NDM/9SUT3/U1I8/1VUO/9vbUf/nZpY/87LdP/PzHT/z8x0/8/M
        dP9gXzb/AgIClAAAAAAAAAAAAAAAAAAAAAAJCQSzeXdE/8/MdP/PzHT/z8x0/8nGcP9BQTH/sbGl/+Xl
        1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/5OTV/8XFuP95eW3/R0cx/8TC
        bv/PzHT/z8x0/2dmOv8FBQOeAAAAAAAAAAAAAAAAAAAAAAsLBcKHhUz/z8x0/8/MdP/PzHT/g4FN/5yc
        kf/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl
        1v+srJ//SUgw/8/MdP/PzHT/bWs9/wYGA6YAAAAAAAAAAAAAAAAAAAAADAwH0ZqYVv/PzHT/z8x0/8/M
        dP90ckb/srKm/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl
        1v/l5db/5eXW/+Xl1v9iYlX/paJc/8/MdP9xcED/BwcErAAAAAAAAAAAAAAAAAAAAAALCwferaph/8/M
        dP/PzHT/z8x0/5+dWv94eGv/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl
        1v/l5db/5eXW/+Xl1v/l5db/5eXW/7W1qf9ubUT/z8x0/3d2Q/8JCQSzAAAAAAAAAAAAAAAAAAAAAAsL
        B+K2s2b/z8x0/8/MdP/PzHT/j5FX/yImJP+trqL/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl
        1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/wcG0/2hmQv/PzHT/fHpG/woKBrkAAAAAAAAAAAAA
        AAAAAAAACwsH4bSxZf/PzHT/z8x0/56eXP8YSVP/D7Lt/xlbcv8lOj//tbWp/+Xl1v/l5db/5eXW/+Xl
        1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v97e3H/j41S/8/MdP93dUP/CgoEsgAA
        AAAAAAAAAAAAAAAAAAALCwfgsrFk/8/MdP/MyXL/JT44/w+28v8Qv/7/EL/+/w15of+enpT/5eXW/+Xl
        1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/w8O2/0A/Lv/NynP/z8x0/3Fv
        P/8JCQWqAAAAAAAAAAAAAAAAAAAAAAsLB+Cyr2P/z8x0/5eWVv8ScZD/EL/+/xC//v8Qv/7/DIi1/4GI
        g//l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/29vN/4uLgP84OCr/vLlp/8/M
        dP/PzHT/bGo9/wYGA6QAAAAAAAAAAAAAAAAAAAAACwsH4LKvY//PzHT/VWNG/w2h1v8Qv/7/EL/+/xC/
        /v8Pt/P/N0xQ/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Xl1v/l5db/z8/C/zs6L/9GRTL/g4FN/8vI
        cv/PzHT/z8x0/8/MdP9nZjr/BQUDnAAAAAAAAAAAAAAAAAAAAAALCwfgsrFk/8/MdP9CVD//D7Ls/xC/
        /v8Qv/7/EL/+/xC//v8bWG3/oaOZ/+Xl1v/l5db/5eXW/+Xl1v/l5db/5eXW/+Li0/9KST3/r61j/8/M
        dP/PzHT/z8x0/8/MdP/PzHT/z8x0/2poO/8GBgOgAAAAAAAAAAAAAAAAAAAAAAsLB+CysWT/z8x0/0ZX
        Qf8Oreb/EL/+/xC//v8Qv/7/EL/+/w+59v8cQU3/i5GK/+Xl1v/l5db/5eXW/+Xl1v/V1cf/UVFG/4uJ
        Uf/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/dHNB/wkJBq8AAAAAAAAAAAAAAAAAAAAACwsH4bKx
        ZP/PzHT/iYtS/xJ1lv8Qv/7/EL/+/xC//v8Qv/7/EL/+/xC7+f8WZ4P/LEJH/2hwa/+DhHn/ZmVZ/0lI
        NP+qp2D/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP93dUP/CQkEsgAAAAAAAAAAAAAAAAAA
        AAALCwfhtLFl/8/MdP/Oy3T/MkU4/xCXxv8Qv/7/EL/+/xC//v8Qv/7/EL/+/xC//v8Pq+T/Gy0p/5aT
        VP+uq2H/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/2hnOv8FBQOgAAAAAAAA
        AAAAAAAAAAAAAAwLCOG0sWX/z8x0/8/MdP/IxXD/QlI+/xZle/8Pr+j/EL/+/xC//v8Qvv3/DpHA/x43
        NP+xrmP/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/X142/wIC
        ApEAAAAAAAAAAAAAAAAAAAAACwsH4bKxZP/PzHT/z8x0/8/MdP/PzHT/k5RW/zVGN/8kQD3/JEI//y1E
        O/9fbEr/xMFu/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP9raTz/BQUDoQAAAAAAAAAAAAAAAAAAAAAMDAfYnpxY/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP/PzHT/z8x0/3l3RP8JCQS0AAAAAAAAAAAAAAAAAAAAAAkJBb19e0b/z8x0/8/MdP/PzHT/z8x0/8/M
        dP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP/PzHT/z8x0/8/MdP/PzHT/i4lO/woKBsUAAAAAAAAAAAAAAAAAAAAAAAAAZTAwG/bPzHT/z8x0/8/M
        dP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP+CgEn/CwsFvAAAAAAAAAAAAAAAAAAAAAAAAAAACwoG76Cd
        Wv/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/M
        dP/PzHT/z8x0/8/MdP/PzHT/z8x0/8/MdP/PzHT/z8x0/z49IvgCAgJ0AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAqCgoG7ignF/VDQib5SEYo+Tk4H/cwMBv2KCgX9ScnF/QbGxH0GxoQ9BsaEPQbGhD0HRwR9Sws
        GfU+PSL3VVQv/VxbM/9cWzP/VFQv+khGKPlgXzb/b24+/29uPv88OyH4CgoF6gAAAAYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAPwAAAHYAAAB2AAAAXwAAAFIAAAA/AAAAPwAAACMAAAAhAAAAIQAA
        ACEAAAAlAAAAPwAAAFoAAABuAAAAigAAAI4AAACHAAAAdwICApYKCgasDw8HrwICAoEAAAAGAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////////////////AAAA/gAAAH4AAAB8AAAAfAAAADwAAAA8AA
        AAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAAD4AAAA+AAAAfwAAAH///xD///////////
</value>
  </data>
</root>